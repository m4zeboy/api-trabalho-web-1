// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  birth_date       DateTime
  city             String
  email            String             @unique
  full_name        String
  password         String
  phone_number     String
  Recipe           Recipe[]
  CommentsOfRecipe CommentsOfRecipe[]

  @@map("users")
}

model Category {
  name               String               @id @unique
  CategoriesOfRecipe CategoriesOfRecipe[]

  @@map("categories")
}

model Recipe {
  id String @id @default(uuid())

  author    User   @relation(fields: [author_id], references: [id])
  author_id String

  recipe_name String
  description String

  CategoriesOfRecipe  CategoriesOfRecipe[]
  ImagesOfRecipe      ImagesOfRecipe[]
  IngredientsOfRecipe IngredientsOfRecipe[]

  preparation_time         Decimal
  preparation_instructions String
  portions                 Int
  nutritional_value        Int
  cooking_method           String
  created                  DateTime           @default(now())
  RatingsOfRecipe          RatingsOfRecipe[]
  CommentsOfRecipe         CommentsOfRecipe[]
}

model CategoriesOfRecipe {
  category      Category @relation(fields: [category_name], references: [name])
  category_name String

  recipe    Recipe @relation(fields: [recipe_id], references: [id])
  recipe_id String

  @@id([category_name, recipe_id])
  @@map("categories_of_recipe")
}

model IngredientsOfRecipe {
  id              String  @id @default(uuid())
  ingredient_name String
  quantity        Decimal
  unity           String
  recipe          Recipe  @relation(fields: [recipe_id], references: [id])
  recipe_id       String

  @@map("ingredients_of_recipe")
}

model ImagesOfRecipe {
  url      String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  @@id([url, recipeId])
  @@map("images_of_recipe")
}

model RatingsOfRecipe {
  rating    Int    @default(0)
  recipe_id String

  recipe Recipe @relation(fields: [recipe_id], references: [id])

  @@id([recipe_id, rating])
  @@map("ratings_of_recipe")
}

model CommentsOfRecipe {
  recipe    Recipe @relation(fields: [recipe_id], references: [id])
  recipe_id String
  user      User   @relation(fields: [user_id], references: [id])
  user_id   String

  created DateTime @default(now())

  comment String

  @@id([recipe_id, user_id, comment])
}
